{"version":3,"sources":["components/Button.js","components/TemperatureDisplay.js","components/ControlPanel.js","components/ThermostatDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["StyledControlPanel","styled","div","Button","props","onClick","TemperatureDisplay","setTemperature","currentTemperature","className","ControlPanel","handleButtonPress","StyledThermostatDisplay","ThermostatDisplay","useState","mode","status","state","setState","ws","useRef","useEffect","current","WebSocket","onopen","console","log","onmessage","event","JSON","parse","data","onclose","close","updateTemperature","newSetTemp","a","axios","post","response","buttonType","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAGMA,EAAqBC,IAAOC,IAAV,uJAUT,SAASC,EAAOC,GAAQ,IAC7BC,EAAYD,EAAZC,QACR,OACE,eAACL,EAAD,WACE,wBAAQK,QAAS,kBAAMA,EAAQ,OAA/B,SACE,6BACE,cAAC,IAAD,QAGJ,wBAAQA,QAAS,kBAAMA,EAAQ,SAA/B,SACE,6BACE,cAAC,IAAD,W,+DCxBK,SAASC,EAAmBF,GAAQ,IACzCG,EAAuCH,EAAvCG,eAAgBC,EAAuBJ,EAAvBI,mBAExB,OACE,sBAAKC,UAAU,sBAAf,UACE,4CAAeF,KACf,gDAAmBC,QCJV,SAASE,EAAaN,GAAQ,IACnCO,EAAsBP,EAAtBO,kBACR,OACE,qBAAKF,UAAU,gBAAf,SACE,cAACN,EAAD,CAAQE,QAASM,MCCvB,IAAMC,EAA0BX,IAAOC,IAAV,+OAcd,SAASW,EAAkBT,GAAQ,IAAD,EACrBU,mBAAS,CACjCP,eAAgB,GAChBC,mBAAoB,GACpBO,KAAM,KACNC,OAAQ,OALqC,mBACxCC,EADwC,KACjCC,EADiC,KAOzCC,EAAKC,iBAAO,MAElBC,qBAAU,WAMR,OALAF,EAAGG,QAAU,IAAIC,UAAU,0BAC3BJ,EAAGG,QAAQE,OAAS,kBAAMC,QAAQC,IAAI,cACtCP,EAAGG,QAAQK,UAAY,SAACC,GAAD,OAAWV,EAASW,KAAKC,MAAMF,EAAMG,QAC5DZ,EAAGG,QAAQU,QAAU,kBAAMP,QAAQC,IAAI,cAEhC,WACLP,EAAGG,QAAQW,WAEZ,IAEH,IAAMC,EAAiB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACDC,IAAMC,KAAK,OAAX,2BAClBrB,GADkB,IAErBV,eAAgB4B,KAHM,OAClBI,EADkB,OAKxBrB,EAASqB,EAASR,MALM,2CAAH,sDAkBvB,OACE,eAACnB,EAAD,WACE,cAACN,EAAD,CACEC,eAAgBU,EAAMV,eACtBC,mBAAoBS,EAAMT,qBAE5B,cAACE,EAAD,CAAcC,kBAhBQ,SAAC6B,GACzBf,QAAQC,IAAI,gBACO,OAAfc,GACFN,EAAkBjB,EAAMV,eAAiB,GAExB,SAAfiC,GACFN,EAAkBjB,EAAMV,eAAiB,SC5ChCkC,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAACI,EAAD,OCMS6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67f5a4e8.chunk.js","sourcesContent":["import { BsCaretDownFill, BsCaretUpFill } from 'react-icons/bs';\nimport styled from 'styled-components';\n\nconst StyledControlPanel = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  button {\n    height: 100%;\n  }\n`;\n\nexport default function Button(props) {\n  const { onClick } = props;\n  return (\n    <StyledControlPanel>\n      <button onClick={() => onClick('UP')}>\n        <h2>\n          <BsCaretUpFill />\n        </h2>\n      </button>\n      <button onClick={() => onClick('DOWN')}>\n        <h2>\n          <BsCaretDownFill />\n        </h2>\n      </button>\n    </StyledControlPanel>\n  );\n}\n","export default function TemperatureDisplay(props) {\n  const { setTemperature, currentTemperature } = props;\n\n  return (\n    <div className=\"temperature-display\">\n      <h2>Set Temp: {setTemperature}</h2>\n      <h2>Current Temp: {currentTemperature}</h2>\n    </div>\n  );\n}\n","import Button from './Button';\n\nexport default function ControlPanel(props) {\n  const { handleButtonPress } = props;\n  return (\n    <div className=\"control-panel\">\n      <Button onClick={handleButtonPress} />\n    </div>\n  );\n}\n","import { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport TemperatureDisplay from './TemperatureDisplay';\nimport ControlPanel from './ControlPanel';\n\nconst StyledThermostatDisplay = styled.div`\n  display: flex;\n  align-items: stretch;\n  .temperature-display {\n    flex-grow: 3;\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n  }\n  .control-panel {\n    flex-grow: 1;\n  }\n`;\n\nexport default function ThermostatDisplay(props) {\n  const [state, setState] = useState({\n    setTemperature: 67,\n    currentTemperature: 70,\n    mode: null,\n    status: null,\n  });\n  const ws = useRef(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket('ws://localhost:5000/ws');\n    ws.current.onopen = () => console.log('ws opened');\n    ws.current.onmessage = (event) => setState(JSON.parse(event.data));\n    ws.current.onclose = () => console.log('ws closed');\n\n    return () => {\n      ws.current.close();\n    };\n  }, []);\n\n  const updateTemperature = async (newSetTemp) => {\n    const response = await axios.post('/api', {\n      ...state,\n      setTemperature: newSetTemp,\n    });\n    setState(response.data);\n  };\n\n  const handleButtonPress = (buttonType) => {\n    console.log('Button Press');\n    if (buttonType === 'UP') {\n      updateTemperature(state.setTemperature + 1);\n    }\n    if (buttonType === 'DOWN') {\n      updateTemperature(state.setTemperature - 1);\n    }\n  };\n\n  return (\n    <StyledThermostatDisplay>\n      <TemperatureDisplay\n        setTemperature={state.setTemperature}\n        currentTemperature={state.currentTemperature}\n      />\n      <ControlPanel handleButtonPress={handleButtonPress} />\n    </StyledThermostatDisplay>\n  );\n}\n","import Button from './components/Button';\nimport ThermostatDisplay from './components/ThermostatDisplay';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThermostatDisplay />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}